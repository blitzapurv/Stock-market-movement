from __future__ import absolute_import
import unittest
import numpy as np

from tests.sample_data import SampleData
from pyti import momentum


class TestMomentum(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.data = SampleData().get_sample_close_data()

        self.momentum_period_6_expected = [np.nan, np.nan, np.nan, np.nan,
        np.nan, 17.229999999999905, 9.32000000000005, 10.629999999999995,
        2.57000000000005, 2.0400000000000773, 5.9700000000000273,
        5.6899999999999409, 0.13999999999998636, -4.6000000000000227,
        -0.38999999999998636, -20.480000000000018, -26.419999999999959,
        -39.160000000000082, -29.67999999999995, -44.990000000000009,
        -30.839999999999918, -15.590000000000032, 13.260000000000105,
        7.5699999999999363, 15.740000000000009, 14.669999999999959,
        9.1200000000000045, -4.6400000000001, -9.8199999999999363,
        5.9599999999999227, 0.98000000000001819, -9.8400000000000318,
        -31.579999999999927, -4.2200000000000273, -5.8700000000000045,
        25.610000000000014, 36.82000000000005, 48.809999999999945,
        9.3500000000000227, 1.9000000000000909, -17.170000000000073, -6.5,
        7.8700000000000045, 38.459999999999923, 35.159999999999968,
        33.680000000000064, 23.069999999999936, 25.840000000000032, 4.5,
        4.2799999999999727, 4.9900000000000091, -7.0599999999999454,
        -28.899999999999977, -19.459999999999923, -17.549999999999955,
        -15.32000000000005, -11.919999999999959, 7.3299999999999272,
        -3.8899999999999864, -1.0, -10.539999999999964, -6.7800000000000864,
        -13.789999999999964, 3.3499999999999091, -0.44000000000005457,
        8.8299999999999272, 7.9400000000000546, 2.2699999999999818,
        10.900000000000091, 13.310000000000059, -5.0299999999999727,
        -10.950000000000045, -7.2599999999999909, -16.990000000000009,
        -14.720000000000027, -14.569999999999936, -11.059999999999945,
        3.4300000000000637, -9.4900000000000091, 1.6100000000000136,
        17.529999999999973, 19.299999999999955, -1.9500000000000455,
        2.9199999999999591, -12.990000000000009, -16.07000000000005,
        -12.199999999999932, -3.6499999999999773, -0.10000000000002274, 3.75,
        4.6700000000000728, 1.1299999999999955, 6.42999999999995,
        11.450000000000045, 11.819999999999936, 4.6000000000000227,
        9.0099999999999909, 7.3999999999999773, 5.4500000000000455,
        3.07000000000005, 6.2899999999999636, -0.73000000000001819,
        -0.12000000000000455, -10.950000000000045, -9.57000000000005,
        -7.3600000000000136, -4.2899999999999636, -15.589999999999918,
        -31.409999999999968, -36.949999999999932, -42.470000000000027,
        -43.420000000000073, -32.060000000000059, -11.430000000000064,
        -4.8899999999999864, -4.2400000000000091, -4.3199999999999363,
        -23.649999999999977, -18.610000000000014, -27.600000000000023,
        -20.899999999999977, -26.0, -17.850000000000023, -28.539999999999964,
        -20.509999999999991, -27.620000000000005, -16.950000000000045]

        self.momentum_period_8_expected = [np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, 22.75, 9.6200000000000045, 5.2699999999999818,
        5.7200000000000273, 10.090000000000032, 5.6600000000000819,
        -4.3000000000000682, -5.75, -17.330000000000041, -18.370000000000005,
        -39.470000000000027, -39.669999999999959, -50.879999999999995,
        -43.569999999999936, -33.57000000000005, -5.7299999999999045,
        -5.6800000000000637, 4.0200000000000955, 0.77999999999997272,
        20.539999999999964, 20.469999999999914, 0.090000000000031832,
        -3.2800000000000864, -5.8099999999999454, -5.0400000000000773,
        -25.779999999999973, -13.25, -4.5099999999999909, 29.620000000000005,
        25.82000000000005, 22.049999999999955, 5.9400000000000546,
        28.970000000000027, 16.669999999999959, 25.190000000000055,
        4.3099999999999454, 7.5799999999999272, 15.32000000000005, 41.0,
        46.3599999999999, 47.32000000000005, 18.579999999999927,
        11.730000000000018, 7.5300000000000864, 4.1399999999999864,
        -15.259999999999991, -23.949999999999932, -31.659999999999968,
        -12.289999999999964, -12.059999999999945, -12.920000000000073,
        -20.779999999999973, -3.7599999999999909, -3.3700000000000045,
        -1.2900000000000773, -11.389999999999986, -5.5100000000001046,
        -11.529999999999973, 9.3499999999999091, 7.6499999999999773,
        1.4199999999999591, 12.170000000000073, 15.57000000000005,
        0.97000000000002728, -2.8600000000000136, -14.669999999999959,
        -12.759999999999991, -1.4199999999999591, -24.5, -27.230000000000018,
        -6.2099999999999227, -11.299999999999955, 7.4500000000000455,
        10.019999999999982, 6.7899999999999636, 6.4099999999999682,
        2.67999999999995, -8.9700000000000273, 3.4399999999999409,
        -7.0199999999999818, -14.769999999999982, -16.720000000000027,
        -3.2699999999999818, 5.1900000000000546, 7.1000000000000227,
        7.7300000000000182, 6.92999999999995, 12.199999999999932,
        9.8900000000001, 12.360000000000014, 10.459999999999923, 11.25,
        8.8400000000000318, 4.7300000000000182, -0.18999999999994088,
        5.7399999999998954, -8.7100000000000364, -8.1299999999999955,
        -8.0800000000000409, -7.5499999999999545, -16.139999999999986,
        -39.389999999999986, -44.959999999999923, -39.600000000000023,
        -41.399999999999977, -40.840000000000032, -46.530000000000086,
        -34.259999999999991, -12.430000000000064, -8.7699999999999818,
        -22.019999999999982, -21.720000000000027, -29.799999999999955,
        -21.899999999999977, -29.879999999999995, -35.629999999999995,
        -45.940000000000055, -26.659999999999968, -30.909999999999968,
        -19.230000000000018]

        self.momentum_period_10_expected = [np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, np.nan, np.nan, 17.389999999999986,
        12.769999999999982, 13.319999999999936, 5.4100000000000819,
        0.10000000000002274, -0.2299999999999045, -17.030000000000086,
        -23.730000000000018, -36.32000000000005, -31.620000000000005,
        -51.189999999999941, -53.559999999999945, -39.460000000000036,
        -18.459999999999923, -23.660000000000082, -14.969999999999914,
        -12.470000000000027, 8.82000000000005, 6.5799999999999272,
        11.509999999999991, 21.829999999999927, 4.1000000000000227,
        -14.280000000000086, -32.569999999999936, -8.4500000000000455,
        1.2899999999999636, 20.590000000000032, 27.180000000000064,
        26.059999999999945, -5.0599999999999454, 2.2100000000000364,
        13.259999999999991, 52.259999999999991, 38.149999999999977,
        39.269999999999982, 11.759999999999991, 10.120000000000005,
        26.519999999999982, 54.639999999999986, 41.869999999999891,
        33.210000000000036, 21.610000000000014, 11.590000000000032,
        -12.719999999999914, -12.75, -18.019999999999982, -16.779999999999973,
        -26.169999999999959, -9.8899999999999864, -20.919999999999959,
        -24.009999999999991, -20.259999999999991, -4.0500000000000682,
        -4.2200000000000273, -0.020000000000095497, -9.1299999999999955,
        0.48999999999989541, -3.4399999999999409, 1.9399999999999409,
        11.879999999999995, 14.720000000000027, 2.2400000000000091,
        -0.60000000000002274, -8.6699999999999591, -4.6699999999999591,
        -8.8299999999999272, -20.269999999999982, -13.92999999999995,
        -16.139999999999986, -27.470000000000027, -2.1899999999999409,
        8.2100000000000364, 12.629999999999995, -1.1000000000000227,
        -9.8300000000000409, -0.61000000000001364, 3.1999999999999318, -3.0,
        4.7400000000000091, -11.540000000000077, -14.389999999999986,
        -11.42999999999995, 0.080000000000040927, 8.25, 12.899999999999977,
        13.5, 5.3700000000000045, 12.740000000000009, 15.75, 14.600000000000023,
        11.899999999999977, 10.529999999999973, 5.5800000000000409,
        4.17999999999995, -8.1699999999999591, -2.2700000000000955,
        -5.8400000000000318, -6.1099999999999, -16.860000000000014,
        -42.649999999999977, -45.509999999999991, -47.580000000000041,
        -49.409999999999968, -37.970000000000027, -44.509999999999991,
        -43.039999999999964, -47.530000000000086, -38.139999999999986,
        -30.210000000000036, -26.170000000000073, -28.169999999999959,
        -25.009999999999991, -32.079999999999927, -36.629999999999995,
        -49.82000000000005, -44.439999999999941, -48.310000000000059,
        -25.379999999999995]

    def test_momentum_period_6(self):
        period = 6
        mom = momentum.momentum(self.data, period)
        np.testing.assert_array_equal(mom, self.momentum_period_6_expected)

    def test_momentum_period_8(self):
        period = 8
        mom = momentum.momentum(self.data, period)
        np.testing.assert_array_equal(mom, self.momentum_period_8_expected)

    def test_momentum_period_10(self):
        period = 10
        mom = momentum.momentum(self.data, period)
        np.testing.assert_array_equal(mom, self.momentum_period_10_expected)

    def test_momentum_invalid_period(self):
        period = 128
        with self.assertRaises(Exception) as cm:
            momentum.momentum(self.data, period)
        expected = "Error: data_len < period"
        self.assertEqual(str(cm.exception), expected)
