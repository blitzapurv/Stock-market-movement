from __future__ import absolute_import
import unittest
import numpy as np

from tests.sample_data import SampleData
from pyti import exponential_moving_average


class TestExponentialMovingAverage(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.data = SampleData().get_sample_close_data()

        self.ema_period_6_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        807.02732709950601, 809.36943856347534, 811.57440210146626,
        812.18585332862858, 811.51167137144193, 813.03754508743032,
        814.78320748059286, 815.07968870069783, 812.70892143025173,
        811.64434152748379, 806.29546851721182, 801.00157100290141,
        792.08458029483256, 786.49900395985253, 778.3013324315848,
        772.33519779659707, 772.50392182231633, 777.2539741629422,
        780.11334548733646, 780.22474319767912, 780.51104642045016,
        782.69806614130005, 783.68893299615797, 780.89411393397643,
        782.41484297812269, 781.70954696934052, 779.67022014427982,
        770.7224102172039, 770.44497569199416, 773.44687093232972,
        783.48082470791189, 793.02367697796615, 796.77266839175115,
        793.51471418489757, 790.7359068454482, 790.42996530228174,
        794.72516192268495, 798.969814945503, 805.61978887320629,
        810.55747667215576, 815.60169077864032, 821.05718458401952,
        826.57636791343214, 826.47700776287923, 825.18272582921668,
        826.1538565435585, 824.79463420371678, 818.71476966204045,
        813.31937877362213, 809.80528718732853, 809.93518760291715,
        809.06422194777713, 810.20271289108439, 807.22227750333252,
        805.97225868423118, 804.49261957970691, 803.61321708617584,
        802.28731200501852, 802.35140888418425, 802.51831490629661,
        804.97850741002128, 807.03748451344779, 805.77779150003926,
        809.0392597820121, 811.53403022818156, 809.78031561201294,
        806.4732584489924, 802.63537755822165, 801.09762879322523,
        800.53466262840118, 796.54081627852281, 793.59261722731912,
        795.04414823962998, 792.86631498470945, 795.92903689328011,
        799.67082509997647, 802.82468027130881, 801.47996432212028,
        798.27529600878233, 795.92801595702986, 794.30503979455818,
        794.20536030737867, 793.27622206539638, 792.46785952324944,
        792.88759409550698, 794.24034795734349, 795.23463302752293,
        796.66375656708226, 798.81968948482722, 801.32334431114248,
        801.6173631694503, 803.26812161844305, 804.7906061318904,
        806.13884282129698, 807.06176840743376, 807.27140300321491,
        806.86492413549763, 806.92596173449397, 803.73258056927784,
        801.95149062965572, 801.06195973496426, 800.74094193523092,
        797.44717086175808, 786.61856680780988, 778.0323647377088,
        770.40297184976089, 764.85806555320335, 761.44140711989326,
        757.8164798478789, 757.22274386418894, 755.75882674664786,
        754.83301380067439, 748.38859307613905, 743.76443287853829,
        738.5922990668862, 735.77938465459113, 732.1812553908884,
        726.51673057319852, 719.77341547086951, 715.51271936015075,
        711.40166686269902, 710.0985836665883]

        self.ema_period_8_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, 809.87511039506569, 811.14736952710587,
        811.09599978863753, 812.48872650228316, 813.96252793740246,
        814.52771939857178, 812.99372919527764, 812.11173938413049,
        807.65864531118575, 803.33854386415715, 796.14670001705917,
        790.87683374568701, 783.17048528992075, 777.2309249266134,
        775.8304605546067, 778.16722678713973, 779.53886446459842,
        779.29852809941121, 779.3290882690593, 780.82226260879258,
        782.40511944985656, 781.37506207512934, 782.79161899065286,
        781.84175391610734, 779.99165577148403, 773.11532262769742,
        772.5627959085798, 774.11810917839, 781.82624061850902,
        789.76443770331605, 793.03543700431749, 790.42160267604254,
        788.83391977290876, 789.95146636171103, 794.56126880482566,
        798.98732308368244, 804.03906079193348, 807.18156914182555,
        811.18641356239164, 816.67544684018435, 822.75207855925862,
        824.26737563837924, 824.23623220531567, 825.46107894550505,
        824.64493486977085, 820.32714212894632, 816.23089343681863,
        812.68986623703938, 811.66180366569108, 810.69905864129316,
        811.21404131385952, 807.97335057261012, 806.25334204783451,
        804.9442751687684, 804.40335283483284, 803.38213646078316,
        803.26784477033391, 802.89019773552445, 804.34226090018967,
        806.1060618353348, 805.3232726007675, 807.93655251821804,
        810.16951744598987, 809.18718395619112, 806.94963093102501,
        804.13170236672374, 802.34700327880125, 801.77234500905536,
        798.83962250602974, 795.68916879227265, 795.79629463825916,
        793.6017666981744, 795.75985396621218, 798.91062051364315,
        801.28026127195176, 800.15038658094875, 798.2381561453916,
        796.41295006855876, 795.17742159363036, 795.57243103091264,
        794.7191098671957, 793.38581236159519, 792.9379151620949,
        793.73986831901368, 794.64393786425182, 796.09313991929616,
        797.94457842299983, 799.93565469804128, 800.48826015022848,
        802.20794357854959, 803.74611980498867, 805.13480928074523,
        806.27694022679111, 806.81333826905916, 806.54670211941868,
        806.68376546111369, 804.4519883831091, 802.98075187919505,
        802.10690326463885, 801.59812612118697, 798.72924088405341,
        789.98970314243491, 782.27661908667801, 775.11069680263267,
        769.83646620345746, 766.12849050478098, 761.95371219561662,
        759.36356471608758, 756.73721437200663, 755.51683595158204,
        750.19245419978381, 746.24332981080386, 741.55464579345698,
        738.62486413897159, 735.15102596486452, 729.94038660079752,
        723.31451227190007, 718.60702875656625, 714.50252417525724,
        712.67957960319632]

        self.ema_period_10_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, np.nan, 809.99039688880748, 811.67453684590134,
        813.22847318315848, 813.91651022862595, 812.76527617212628,
        812.2090913585198, 808.70134161204544, 804.98299701868734,
        798.64424236643993, 793.96274569120294, 787.31717043461151,
        781.68851160462771, 779.44614091252322, 780.5318424369849,
        780.86352927685948, 779.916926582359, 779.29360447039278,
        780.14843117919452, 781.23758237974334, 780.21630466674264,
        781.90974078036231, 782.00080325694739, 780.73668949870898,
        774.7108752938866, 773.77607304761852, 774.96296482108244,
        781.28236464435429, 787.62561367683224, 790.73113345838124,
        789.12487913780558, 787.75188722864561, 788.11169085595952,
        792.12574089557836, 796.95795325533288, 802.41747427530015,
        806.17897860889479, 809.53991887309382, 813.46420064097413,
        818.46624839172728, 820.69639789578116, 821.9798497892391,
        824.00093081866214, 823.99648805313529, 820.79071836042056,
        817.42451115753647, 814.6235183649203, 813.81299847785272,
        812.50558728853628, 812.19911448449648, 809.45082767114388,
        807.76868077944778, 805.8495954837955, 804.76525511050511,
        803.78551862820905, 803.82017582125775, 803.56493570344242,
        804.69756953340948, 805.82713113326975, 804.92416936107236,
        807.15125710108703, 809.11445138068439, 808.47912819297937,
        806.81247219217903, 804.59475153029712, 803.21828193454007,
        802.81696057198678, 800.01677599780612, 797.34129871584855,
        797.50200201923406, 795.11389622132663, 796.14844240351033,
        798.38503730579043, 800.36952968607989, 799.77504377643345,
        798.06678499491068, 796.25147583824082, 795.50516223217448,
        795.76289514321365, 795.14241786595369, 794.52342754832705,
        794.09461266593451, 794.22640644577871, 794.40901080009826,
        795.44041952057285, 797.08993526220502, 799.04415788525625,
        799.69607710103776, 801.12130532294645, 802.58978111696047,
        804.08704282949395, 805.30804406629886, 806.01045678190314,
        806.1023660494991, 806.45841746708663, 804.62885083834897,
        803.40733106802713, 802.7794198682094, 802.30322521664471,
        799.86629282524939, 792.48353316255805, 785.62198706490324,
        779.12907253342996, 773.85291607745944, 769.85775507429219,
        765.83935713439735, 763.06526953038349, 759.99076978541211,
        757.4080030532225, 751.87522809190875, 748.10419033342032,
        743.80052183588418, 741.03779678694593, 737.66565808498058,
        732.87820758604823, 726.8889307547239, 722.27241397434011,
        717.7418681263797, 715.16688890795626]

    def test_exponential_moving_average_period_6(self):
        period = 6
        ema = exponential_moving_average.exponential_moving_average(self.data, period)
        np.testing.assert_array_equal(ema, self.ema_period_6_expected)

    def test_exponential_moving_average_period_8(self):
        period = 8
        ema = exponential_moving_average.exponential_moving_average(self.data, period)
        np.testing.assert_array_equal(ema, self.ema_period_8_expected)

    def test_exponential_moving_average_period_10(self):
        period = 10
        ema = exponential_moving_average.exponential_moving_average(self.data, period)
        np.testing.assert_array_equal(ema, self.ema_period_10_expected)

    def test_exponential_moving_average_invalid_period(self):
        period = 128
        with self.assertRaises(Exception) as cm:
            exponential_moving_average.exponential_moving_average(self.data, period)
        expected = "Error: data_len < period"
        self.assertEqual(str(cm.exception), expected)
