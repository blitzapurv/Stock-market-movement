from __future__ import absolute_import
import unittest
import numpy as np

from tests.sample_data import SampleData
from pyti import typical_price


class TestTypicalPrice(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.close_data = SampleData().get_sample_close_data()
        self.high_data = SampleData().get_sample_high_data()
        self.low_data = SampleData().get_sample_low_data()

        self.tp_expected = [792.42999999999995, 802.86666666666667,
        804.61333333333334, 809.96999999999991, 807.61666666666667,
        809.68999999999994, 812.28666666666652, 815.05666666666673,
        812.59666666666669, 809.88666666666677, 815.84666666666669,
        817.94666666666672, 815.52333333333343, 807.71999999999991,
        809.66666666666663, 795.22666666666657, 791.40333333333331,
        776.2733333333332, 778.42000000000007, 764.65999999999997,
        764.31333333333339, 776.02333333333343, 789.42000000000007,
        785.71000000000004, 780.31666666666661, 779.13000000000011,
        784.9133333333333, 784.84666666666669, 775.96999999999991,
        786.21999999999991, 780.14333333333343, 775.19999999999993,
        753.2266666666668, 771.70333333333338, 780.18666666666661,
        805.73000000000002, 811.87333333333333, 801.88666666666666,
        781.03000000000009, 782.09666666666669, 788.48000000000002,
        805.62333333333333, 809.75666666666666, 819.56333333333339,
        817.06333333333339, 822.00666666666666, 828.43666666666661,
        835.50333333333344, 824.03666666666652, 821.82333333333338,
        827.11333333333334, 821.61999999999989, 806.84666666666669,
        804.60666666666668, 803.99666666666656, 811.95666666666659,
        809.61333333333334, 813.90333333333331, 800.75999999999988,
        803.03666666666675, 801.40333333333331, 802.7166666666667,
        800.14666666666665, 803.9666666666667, 802.64666666666665,
        810.02666666666664, 810.48333333333323, 802.69333333333327,
        815.21000000000004, 816.0, 805.07666666666671, 799.78666666666652,
        795.49666666666656, 797.88999999999999, 801.10666666666657,
        790.60333333333335, 788.78000000000009, 798.62, 788.29333333333341,
        802.70666666666659, 807.78666666666652, 808.00999999999988,
        796.85333333333335, 791.17666666666673, 789.77666666666664,
        791.77666666666664, 795.82333333333338, 793.09333333333325,
        791.31333333333316, 793.57333333333327, 796.26999999999998,
        796.90999999999997, 799.42999999999995, 802.87, 805.45666666666659,
        801.36333333333334, 805.80666666666673, 806.89999999999998,
        808.01666666666677, 808.6633333333333, 807.36000000000001,
        805.23666666666668, 806.80333333333328, 797.16666666666663, 798.88,
        800.11000000000001, 800.88000000000011, 791.46333333333325,
        765.80333333333328, 761.89999999999998, 757.54333333333341,
        757.55666666666673, 759.20666666666659, 754.46333333333325,
        756.90333333333331, 753.5, 753.0866666666667, 735.65999999999997,
        735.94666666666672, 729.61000000000001, 732.53000000000009,
        727.24666666666656, 717.77666666666664, 707.38666666666666,
        709.04333333333341, 704.95666666666659, 710.37666666666667]

    def test_typical_price(self):
        tp = typical_price.typical_price(self.close_data, self.high_data, self.low_data)
        np.testing.assert_array_equal(tp, self.tp_expected)

    def test_typical_price_invalid_data(self):
        self.close_data.append(1)
        with self.assertRaises(Exception) as cm:
            typical_price.typical_price(self.close_data, self.high_data, self.low_data)
        expected = ("Error: mismatched data lengths, check to ensure that all input data is the same length and valid")
        self.assertEqual(str(cm.exception), expected)
