from __future__ import absolute_import
import unittest
import numpy as np

from tests.sample_data import SampleData
from pyti import money_flow_index


class TestMoneyFlow(unittest.TestCase):
    def setUp(self):
        """Create data to use for testing."""
        self.close_data = SampleData().get_sample_close_data()
        self.high_data = SampleData().get_sample_high_data()
        self.low_data = SampleData().get_sample_low_data()
        self.volume = SampleData().get_sample_volume()

        self.mfi_period_6_expected =[np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, 74.079874580360524, 74.202530957454783, 59.328703031306937,
        46.463119099985519, 69.407797360705203, 68.460430654064481,
        48.660733240885811, 30.353066122476719, 50.77405902507784,
        51.320693359166384, 34.543375157861007, 19.362849699046961,
        34.317038532639415, 35.065184254885565, 13.867166737514765,
        31.38381172934082, 45.090299723267925, 43.350557948925342,
        28.959197145189606, 29.041206440067953, 47.603325221596144,
        29.337587621885334, 16.303972721590412, 33.833279837354027,
        33.932764456235915, 33.624290942387347, 17.072429139633016,
        32.977340136355252, 48.190287335207159, 50.195725158564677,
        67.070125928608718, 64.745896985995913, 62.325341737134444,
        66.500883474155387, 68.815660044903524, 73.504640250743847,
        77.874813804148388, 89.828911743776672, 89.776967073055289,
        89.477990900626395, 89.823840456920749, 88.352578304593351,
        76.412302694567146, 59.084424847122733, 76.492048078291432,
        60.415563320556622, 36.646817192717648, 19.188159294165402,
        18.975684637286591, 35.501220566361965, 16.22881826154665,
        31.695171529027007, 31.143785823672872, 49.68638223082587,
        47.029842334373697, 45.083513076876834, 49.289180257923803,
        47.018922886828598, 51.71865593422114, 45.947296854891448,
        70.045236653558689, 52.28030855199858, 70.243083553197948,
        76.037084423510095, 67.853239585548124, 52.375508291370174,
        35.768505392173523, 49.076705001481393, 51.777020173177213,
        32.350128813560616, 31.764726087097699, 47.634386912714774,
        49.633362149455856, 49.985916953756302, 54.204789942835724,
        69.923798777539332, 72.450203476339894, 54.107112367547579,
        59.129702982977037, 57.682294836537451, 51.169826216865744,
        29.575867132123477, 28.895482219016145, 51.05504493477882,
        63.652824795975917, 69.040180564387143, 74.373331869261932,
        88.285464961830812, 100.0, 85.164782592369349, 85.156432537628831,
        84.474499307465535, 83.052089859206461, 81.664448354711723,
        59.167800992199261, 62.620311572874556, 63.994224424603104,
        41.327417334241211, 44.782504774259785, 43.399676409070743,
        56.808337641675536, 60.385087662492808, 47.183664763290274,
        60.265424359850421, 38.795987526071677, 41.124067024485299,
        35.283923779197991, 36.903157762299806, 53.871587307821599,
        57.153574899935279, 55.775212044746894, 31.668701854075678,
        32.323165722051471, 32.516300790747621, 30.761627756508304,
        29.5365116027629, 30.649672857528415, 30.303350678500877,
        31.480144135370637, 30.27361406556571, 31.15964425989867]

        self.mfi_period_8_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, 67.923574667215462, 60.109211101665728,
        58.567241451672011, 55.568212131360006, 65.325001170335625,
        54.059074436512859, 48.98582220104052, 36.414391281796995,
        39.737059618825796, 40.095094667949041, 37.638742043860937,
        25.348380584098109, 23.932480494814044, 37.620377741792055,
        35.079508208802906, 34.037429531660607, 32.911764604737016,
        32.397409100762076, 34.036308232750358, 33.340385812081038,
        35.890771664052806, 35.858148841253865, 24.973348435396986,
        25.133282288714909, 25.110098618697108, 36.458951266217667,
        36.63525646981909, 51.758295698362176, 62.705595938620121,
        49.270174012992953, 47.722205853374398, 62.106301871936552,
        74.6231063686336, 78.552352785822166, 81.618272827395344,
        83.41388061902299, 75.142536917503094, 83.082808173977185,
        91.854923476304407, 91.511813209111011, 85.311437027953104,
        76.903293720266703, 73.24114501182126, 57.600173635266216,
        59.119555606866783, 46.220674967481905, 27.580417146085694,
        28.024348786500497, 25.71228356623493, 36.783213071856736,
        23.853850562662885, 38.639894992665319, 37.549698477306137,
        46.986745367795805, 46.931380642280935, 44.97050037892209,
        50.379139486537241, 49.326204905362673, 63.922521082200014,
        48.086252455922377, 64.358878329972043, 69.611205941073621,
        66.021777849752866, 53.506351080426455, 48.147502651283361,
        49.932678326579179, 51.391428688954171, 50.258201472163606,
        39.707834793869374, 35.830304013616072, 36.126271712495992,
        48.21955904081068, 64.873268710621716, 66.390324571720186,
        55.489693885059765, 52.276569043853911, 57.146081746916664,
        55.932416976447122, 66.779370010014787, 55.208852745780504,
        37.878925033388192, 33.936148064973011, 47.579654672630774,
        68.903863683380621, 78.661027993741257, 81.337586404441865,
        85.056312211767079, 79.823115305730994, 87.171327492208206,
        87.424721569214739, 87.527131161689667, 87.150478678334792,
        76.084736486312181, 63.830288887503571, 56.487299628903706,
        52.776440339594785, 55.512026062560032, 55.042548145132407,
        54.827984559173139, 45.663152796512833, 47.559888510808321,
        50.36671900617138, 39.446229621794686, 60.267777694142829,
        54.109303441001941, 42.423797344235616, 39.373878087509659,
        41.538782164397745, 41.450218381897528, 41.166691299065938,
        52.794436733185115, 36.078709692283198, 36.802390746421196,
        36.42625365488162, 22.717381422839068, 21.314969234518742,
        34.443248176166989, 34.81772890532126, 35.711100543936439]

        self.mfi_period_10_expected = [np.nan, np.nan, np.nan, np.nan, np.nan,
        np.nan, np.nan, np.nan, np.nan, np.nan, 66.171031523028063,
        65.393302440533802, 57.147816281935086, 47.14413304614196,
        62.515682645338551, 54.482940803555792, 41.176182042437986,
        30.379384307479398, 41.265894994243197, 40.928246223393337,
        28.401187463356749, 29.792798082270664, 38.438779684570605,
        38.547809909519707, 27.238141978195372, 26.897386140512609,
        36.390078154579022, 35.259585524728791, 27.59704074388695,
        37.597986974782472, 38.797415720845535, 28.349504244224732,
        19.842348405368341, 29.072814731071347, 39.356329043446081,
        50.603029158585393, 51.103096022640926, 50.649476767883975,
        48.073126535189211, 51.168669441658587, 61.870513988993046,
        73.80792577892305, 83.803150167232303, 85.543718381493051,
        78.3855903127982, 78.478740078432011, 79.516427295102403,
        85.821578389228804, 87.933316859877394, 82.554843663703153,
        82.157873501937672, 73.415613796505255, 61.667972096621646,
        47.15496327472534, 48.773690032016304, 47.66200079891194,
        30.935478240399632, 30.955744576113531, 30.029582426773842,
        41.247620993543059, 30.884076883518219, 38.484879982953636,
        38.919057777903966, 46.606475368677593, 48.04552435826281,
        46.99164618176534, 60.175775340019435, 50.186630005035283,
        61.082582674152079, 63.051821865335015, 62.762391861197521,
        52.128926290831977, 49.034235864979166, 51.089645927019397,
        58.829593147811266, 50.756736196472879, 41.105192288865766,
        49.407299489998714, 41.618170848978913, 38.517231165829912,
        51.455868992626897, 61.945425470731976, 63.740177666319433,
        52.589347398686925, 46.045193743295492, 53.921828535480536,
        63.627761897016235, 54.232138733333983, 53.910276971458977,
        53.445883721275699, 50.351337018371623, 52.180607060025565,
        65.642341988491637, 80.091293962771744, 86.623621459596407,
        76.104631857056773, 76.442622722089936, 82.535175509150292,
        88.981342242584631, 89.239774087984699, 81.423348902510654,
        72.880312503420043, 71.489072724733873, 56.838422004493026,
        51.805003465916407, 62.085866581263893, 62.271813922567858,
        55.26402046648893, 47.654340743236581, 39.692784684796301,
        41.443338521366975, 52.041751713799336, 49.0300564772974,
        58.837856927586984, 54.252523497959537, 45.116035735719834,
        32.299518831062557, 32.395323090941574, 41.774149095002407,
        42.817186303095909, 52.702141145942228, 38.599149262016958,
        29.071120518861406, 28.049967169185024, 27.47891438971466,
        26.518803591866842, 37.216834653332249]

    def test_money_flow_index_period_6(self):
        period = 6
        mfi = money_flow_index.money_flow_index(self.close_data, self.high_data, self.low_data, self.volume, period)
        np.testing.assert_array_equal(mfi, self.mfi_period_6_expected)

    def test_money_flow_index_period_8(self):
        period = 8
        mfi = money_flow_index.money_flow_index(self.close_data, self.high_data, self.low_data, self.volume, period)
        np.testing.assert_array_equal(mfi, self.mfi_period_8_expected)

    def test_money_flow_index_period_10(self):
        period = 10
        mfi = money_flow_index.money_flow_index(self.close_data, self.high_data, self.low_data, self.volume, period)
        np.testing.assert_array_equal(mfi, self.mfi_period_10_expected)

    def test_money_flow_index_invalid_period(self):
        period = 128
        with self.assertRaises(Exception) as cm:
            money_flow_index.money_flow_index(self.close_data, self.high_data, self.low_data, self.volume, period)
        expected = "Error: data_len < period"
        self.assertEqual(str(cm.exception), expected)

    def test_money_flow_index_invalid_data(self):
        period = 6
        self.close_data.append(0)
        with self.assertRaises(Exception) as cm:
            money_flow_index.money_flow_index(self.close_data, self.high_data, self.low_data, self.volume, period)
        expected = ("Error: mismatched data lengths, check to ensure that all input data is the same length and valid")
        self.assertEqual(str(cm.exception), expected)
